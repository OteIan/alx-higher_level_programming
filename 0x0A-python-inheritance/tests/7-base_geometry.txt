The ``base_geometry`` module
============================

Using ``base_geometry``
-----------------------

Importing the function from the module
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

Check for module docstring
    >>> m_doc = __import__("7-base_geometry").__doc__
    >>> len(m_doc) > 1
    True

Check for class docstring
    >>> c_doc = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(c_doc) > 1
    True

Check for function docstring
    >>> f_doc = __import__("7-base_geometry").BaseGeometry.area.__doc__
    >>> len(f_doc) > 1
    True

    >>> f_doc = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
    >>> len(f_doc) > 1
    True

Initialize name to a constant string
    >>> name = 'March'

Empty value input
    >>> bg.integer_validator(name)
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

Positive value
    >>> bg.integer_validator(name, 15)

Negative value
    >>> bg.integer_validator(name, -9)
    Traceback (most recent call last):
    ...
    ValueError: March must be greater than 0

Value is 0
    >>> bg.integer_validator(name, 0)
    Traceback (most recent call last):
    ...
    ValueError: March must be greater than 0

Value is a non integer
    >>> bg.integer_validator(name, 'feb')
    Traceback (most recent call last):
    ...
    TypeError: March must be an integer